{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Desktop\\\\Application Code\\\\client\\\\src\\\\components\\\\TrailsPage.js\";\nimport React from 'react';\nimport TrailsPageComponent from './TrailsPageComponent';\nimport { Jumbotron, Media } from 'reactstrap';\nimport '../App.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TrailsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickPark = e => {\n      //console.log('this is: ', e.target.innerHTML);\n      if (e.target.innerHTML == 'Reset') {\n        this.setState({\n          current_park: \"National Park\"\n        }, () => {\n          this.query_trails();\n        });\n      } else {\n        this.setState({\n          current_park: e.target.innerHTML\n        }, () => {\n          this.query_trails();\n        });\n      }\n    };\n\n    this.handleClickDiff = e => {\n      //console.log('this is: ', e.target.innerHTML);\n      if (e.target.innerHTML == 'Reset') {\n        this.setState({\n          current_max_dif: \"Max Difficulty\"\n        }, () => {\n          this.query_trails();\n        });\n      } else {\n        this.setState({\n          current_max_dif: e.target.innerHTML\n        }, () => {\n          this.query_trails();\n        });\n      }\n    };\n\n    this.handleClickDist = e => {\n      //console.log('this is: ', e.target.innerHTML);\n      if (e.target.innerHTML == 'Reset') {\n        this.setState({\n          current_max_dist: \"Max Distance\"\n        }, () => {\n          this.query_trails();\n        });\n      } else {\n        this.setState({\n          current_max_dist: e.target.innerHTML\n        }, () => {\n          this.query_trails();\n        });\n      }\n    };\n\n    this.handleClickElev = e => {\n      //console.log('this is: ', e.target.innerHTML);\n      if (e.target.innerHTML == 'Reset') {\n        this.setState({\n          current_max_elev_gain: \"Max Elevation Gain\"\n        }, () => {\n          this.query_trails();\n        });\n      } else {\n        this.setState({\n          current_max_elev_gain: e.target.innerHTML\n        }, () => {\n          this.query_trails();\n        });\n      }\n    };\n\n    this.handleClickRate = e => {\n      //console.log('this is: ', e.target.innerHTML);\n      if (e.target.innerHTML == 'Reset') {\n        this.setState({\n          currernt_min_rating: \"Min Rating\"\n        }, () => {\n          this.query_trails();\n        });\n      } else {\n        this.setState({\n          currernt_min_rating: e.target.innerHTML\n        }, () => {\n          this.query_trails();\n        });\n      }\n    };\n\n    this.state = {\n      parks: [],\n      current_park: \"National Park\",\n      current_max_dif: \"Max Difficulty\",\n      current_max_elev_gain: \"Max Elevation Gain\",\n      current_max_dist: \"Max Distance\",\n      currernt_min_rating: \"Min Rating\",\n      trails: []\n    };\n  }\n\n  componentDidMount() {\n    let park_query = \"http://localhost:8081/parksNames\";\n    fetch(park_query, {\n      method: \"GET\"\n    }).then(res => {\n      return res.json();\n    }, err => {\n      console.log(err);\n    }).then(parkList => {\n      //friendsList is res.json()\n      let allParks = parkList.map((park, i) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: e => this.handleClickPark(e),\n        children: park.Park_Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this));\n      this.setState({\n        parks: allParks\n      });\n    });\n    this.query_trails();\n  }\n\n  query_trails() {\n    var trail_query = \"http://localhost:8081/trails/\";\n    trail_query += this.state.current_park.replace(/ /g, \"_\") + '/';\n    trail_query += this.state.current_max_dif.replace(/ /g, \"_\") + '/';\n    trail_query += this.state.current_max_dist.replace(/ /g, \"_\") + '/';\n    trail_query += this.state.current_max_elev_gain.replace(/ /g, \"_\") + '/';\n    trail_query += this.state.currernt_min_rating.replace(/ /g, \"_\");\n    fetch(trail_query, {\n      method: \"GET\"\n    }).then(res => {\n      return res.json();\n    }, err => {\n      console.log(err);\n    }).then(trailList => {\n      //friendsList is res.json()\n      console.log(trailList);\n      let allTrails = trailList.map((trail, i) => /*#__PURE__*/_jsxDEV(TrailsPageComponent, {\n        park: trail.Park_Name,\n        name: trail.name,\n        city: trail.city_name,\n        state: trail.state_name,\n        populatiry: trail.populatrity,\n        length: trail.length,\n        elev: trail.elevation_gain,\n        diff: trail.difficulty_rating,\n        rate: trail.avg_rating,\n        lat: trail.latitude,\n        long: trail.longitude\n      }, trail.AllTrails_trail_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this));\n      this.setState({\n        trails: allTrails\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n        className: \"jumbotron-trails-search\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron-trails-search-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Search for Trails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Use the filters below to find your perfect trail!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Filter on National Park:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"success\",\n              id: \"dropdown-basic\",\n              children: this.state.current_park\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [this.state.parks, /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickPark(e),\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Filter on Max Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"success\",\n              id: \"dropdown-basic\",\n              children: this.state.current_max_dif\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDiff(e),\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDiff(e),\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDiff(e),\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDiff(e),\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDiff(e),\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDiff(e),\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Filter on Max Distance (miles)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"success\",\n              id: \"dropdown-basic\",\n              children: this.state.current_max_dist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickDist(e),\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Filter on Max Elevation Gain (feet)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"success\",\n              id: \"dropdown-basic\",\n              children: this.state.current_max_elev_gain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickElev(e),\n                children: \"500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickElev(e),\n                children: \"1000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickElev(e),\n                children: \"2000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickElev(e),\n                children: \"3000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickElev(e),\n                children: \"4000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickElev(e),\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Filter on Min Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"success\",\n              id: \"dropdown-basic\",\n              children: this.state.currernt_min_rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickRate(e),\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickRate(e),\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickRate(e),\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickRate(e),\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickRate(e),\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => this.handleClickRate(e),\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Media, {\n        list: true,\n        className: \"container\",\n        children: this.state.trails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jacob/Desktop/Application Code/client/src/components/TrailsPage.js"],"names":["React","TrailsPageComponent","Jumbotron","Media","Dropdown","TrailsPage","Component","constructor","props","handleClickPark","e","target","innerHTML","setState","current_park","query_trails","handleClickDiff","current_max_dif","handleClickDist","current_max_dist","handleClickElev","current_max_elev_gain","handleClickRate","currernt_min_rating","state","parks","trails","componentDidMount","park_query","fetch","method","then","res","json","err","console","log","parkList","allParks","map","park","i","Park_Name","trail_query","replace","trailList","allTrails","trail","name","city_name","state_name","populatrity","length","elevation_gain","difficulty_rating","avg_rating","latitude","longitude","AllTrails_trail_id","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TrailsPageComponent from './TrailsPageComponent';\nimport {\n    Jumbotron,\n    Media\n  } from 'reactstrap';\nimport '../App.css';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\n\nexport default class TrailsPage extends React.Component{\n\n    constructor(props) {\n\t\tsuper(props);\n\n        this.state = {\n            parks : [],\n            current_park : \"National Park\",\n            current_max_dif : \"Max Difficulty\",\n            current_max_elev_gain : \"Max Elevation Gain\",\n            current_max_dist : \"Max Distance\",\n            currernt_min_rating : \"Min Rating\",\n            trails : []\n        }\n    }\n\n    handleClickPark = (e) => {\n        //console.log('this is: ', e.target.innerHTML);\n        if(e.target.innerHTML == 'Reset'){\n            this.setState({\n                current_park : \"National Park\"\n            }, () => {\n                this.query_trails();\n            })\n        } else {\n            this.setState({\n                current_park : e.target.innerHTML\n            }, () => {\n                this.query_trails();\n            })\n        }\n    }\n\n    handleClickDiff = (e) => {\n        //console.log('this is: ', e.target.innerHTML);\n        if(e.target.innerHTML == 'Reset'){\n            this.setState({\n                current_max_dif : \"Max Difficulty\"\n            }, () => {\n                this.query_trails();\n            })\n        } else {\n            this.setState({\n                current_max_dif : e.target.innerHTML\n            }, () => {\n                this.query_trails();\n            })\n        }\n    }\n\n    handleClickDist = (e) => {\n        //console.log('this is: ', e.target.innerHTML);\n        if(e.target.innerHTML == 'Reset'){\n            this.setState({\n                current_max_dist : \"Max Distance\"\n            }, () => {\n                this.query_trails();\n            })\n        } else {\n            this.setState({\n                current_max_dist : e.target.innerHTML\n            }, () => {\n                this.query_trails();\n            })\n        }\n    }\n\n    handleClickElev = (e) => {\n        //console.log('this is: ', e.target.innerHTML);\n        if(e.target.innerHTML == 'Reset'){\n            this.setState({\n                current_max_elev_gain : \"Max Elevation Gain\"\n            }, () => {\n                this.query_trails();\n            })\n        } else {\n            this.setState({\n                current_max_elev_gain : e.target.innerHTML\n            }, () => {\n                this.query_trails();\n            })\n        }\n\n        \n    }\n\n    handleClickRate = (e) => {\n        //console.log('this is: ', e.target.innerHTML);\n        if(e.target.innerHTML == 'Reset'){\n            this.setState({\n                currernt_min_rating: \"Min Rating\"\n            }, () => {\n                this.query_trails();\n            })\n        } else {\n            this.setState({\n                currernt_min_rating : e.target.innerHTML\n            }, () => {\n                this.query_trails();\n            })\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        let park_query = \"http://localhost:8081/parksNames\";\n\n        fetch(park_query, {\n\t\t\tmethod: \"GET\"\n\t\t}).then(res => {\n\t\t\treturn res.json();\n\t\t}, err => {\n\t\t\tconsole.log(err);\n\t\t}).then(parkList => { //friendsList is res.json()\n            let allParks = parkList.map((park, i) =>\n                <Dropdown.Item onClick={(e) => this.handleClickPark(e)}>{park.Park_Name}</Dropdown.Item>\n            );\n            this.setState({\n                parks : allParks,\n            });\n\t\t});\n\n\n        this.query_trails();\n\n    }\n\n    query_trails(){\n        var trail_query = \"http://localhost:8081/trails/\";\n        trail_query += this.state.current_park.replace(/ /g,\"_\") + '/';\n        trail_query += this.state.current_max_dif.replace(/ /g,\"_\") + '/';\n        trail_query += this.state.current_max_dist.replace(/ /g,\"_\") + '/';\n        trail_query += this.state.current_max_elev_gain.replace(/ /g,\"_\") + '/';\n        trail_query += this.state.currernt_min_rating.replace(/ /g,\"_\");\n\n        fetch(trail_query, {\n\t\t\tmethod: \"GET\"\n\t\t}).then(res => {\n\t\t\treturn res.json();\n\t\t}, err => {\n\t\t\tconsole.log(err);\n\t\t}).then(trailList => { //friendsList is res.json()\n            console.log(trailList)\n            let allTrails = trailList.map((trail, i) =>\n                <TrailsPageComponent key = {trail.AllTrails_trail_id}\n                                     park={trail.Park_Name}\n                                     name={trail.name}\n                                     city={trail.city_name}\n                                     state={trail.state_name}\n                                     populatiry={trail.populatrity}\n                                     length={trail.length}\n                                     elev={trail.elevation_gain}\n                                     diff={trail.difficulty_rating}\n                                     rate = {trail.avg_rating}\n                                     lat={trail.latitude}\n                                     long={trail.longitude}/>\n            );\n            this.setState({\n                trails : allTrails\n            });\n\t\t});\n\n        \n    }\n\n    render() {\n\n        return(\n            <div>\n                <Jumbotron className=\"jumbotron-trails-search\">\n                    <div className = \"jumbotron-trails-search-filters\">\n                        <h1>Search for Trails</h1>\n                        <p>Use the filters below to find your perfect trail!</p>\n                        <p>Filter on National Park:</p>\n\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                {this.state.current_park}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                {this.state.parks}\n                                <Dropdown.Divider />\n                                <Dropdown.Item onClick={(e) => this.handleClickPark(e)}>Reset</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        <p></p>\n                    \n                        <p>Filter on Max Difficulty</p>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                {this.state.current_max_dif}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={(e) => this.handleClickDiff(e)}>1</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDiff(e)}>2</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDiff(e)}>3</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDiff(e)}>4</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDiff(e)}>5</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item onClick={(e) => this.handleClickDiff(e)}>Reset</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        <p></p>\n                        <p>Filter on Max Distance (miles)</p>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                {this.state.current_max_dist}\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>1</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>2</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>3</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>4</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>5</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>6</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>7</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>8</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>9</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>10</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>15</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>20</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item onClick={(e) => this.handleClickDist(e)}>Reset</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                        <p></p>\n                        <p>Filter on Max Elevation Gain (feet)</p>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                {this.state.current_max_elev_gain}\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={(e) => this.handleClickElev(e)}>500</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickElev(e)}>1000</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickElev(e)}>2000</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickElev(e)}>3000</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickElev(e)}>4000</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item onClick={(e) => this.handleClickElev(e)}>Reset</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <p></p>\n                        <p>Filter on Min Rating</p>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                {this.state.currernt_min_rating}\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={(e) => this.handleClickRate(e)}>1</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickRate(e)}>2</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickRate(e)}>3</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickRate(e)}>4</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => this.handleClickRate(e)}>5</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item onClick={(e) => this.handleClickRate(e)}>Reset</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </Jumbotron>\n                \n                <Media list className=\"container\">\n                    {this.state.trails}\n                </Media>\n            </div>\n\n        )}\n\n}"]},"metadata":{},"sourceType":"module"}